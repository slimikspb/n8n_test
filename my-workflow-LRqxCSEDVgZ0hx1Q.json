{"createdAt":"2025-06-02T20:30:53.579Z","updatedAt":"2025-06-02T20:30:53.579Z","id":"LRqxCSEDVgZ0hx1Q","name":"My workflow","active":false,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[20,140],"id":"08d746fe-746f-4145-a52e-f2042c0141fc","name":"Schedule Trigger1"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[400,200],"id":"26144233-5fb3-47bd-8e1d-6cb7f8531272","name":"OpenRouter Chat Model"},{"parameters":{"jsonSchemaExample":"{\n  \"Category\": \"Streaming Entertainment Platforms\",\n  \"Brand 1\": \"Netflix\",\n  \"Brand 2\": \"Disney+\",\n  \"Brand 3\": \"Amazon Prime Video\",\n  \"Brand 4\": \"Max\"\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[560,200],"id":"83bf02ec-eff7-400a-89db-070abbb87df2","name":"Structured Output Parser"},{"parameters":{"documentId":{"__rl":true,"value":"1Xg2KNX6I7cDpjmT6TbuhGKBQO5GwInSrT728VvP6N3M","mode":"list","cachedResultName":"famous_brands_sheet","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Xg2KNX6I7cDpjmT6TbuhGKBQO5GwInSrT728VvP6N3M/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Sheet1","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Xg2KNX6I7cDpjmT6TbuhGKBQO5GwInSrT728VvP6N3M/edit#gid=0"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[200,140],"id":"f4e49c06-f819-4e48-bf3e-3b5e442be178","name":"Get Current Videos","alwaysOutputData":true,"credentials":{"googleSheetsOAuth2Api":{"id":"KXr7HKqTeHwkRE8j","name":"Google Sheets account"}}},{"parameters":{"promptType":"define","text":"=Generate a JSON object for ONE new category with the following structure:\n{\n  \"Category\": \"[Category Name]\",\n  \"Brand 1\": \"[Brand/Product Name]\",\n  \"Brand 2\": \"[Brand/Product Name]\",\n  \"Brand 3\": \"[Brand/Product Name]\",\n  \"Brand 4\": \"[Brand/Product Name]\"\n}\n\nRequirements:\n1. Create a SINGLE unique category that represents a popular consumer segment\n2. Category must be:\n   - Highly engaging for YouTube audiences (ages 16-35)\n   - Likely to generate debate/comments\n   - Related to: lifestyle, tech, gaming, fashion, food/drinks, sports, or entertainment\n   - NOT already used (see existing categories below)\n\n3. For each category, select 4 entries that can be EITHER:\n   - Brand names (e.g., Nike, Apple, McDonald's)\n   - Specific products (e.g., iPhone, Big Mac, Air Jordans)\n   - Product lines (e.g., PlayStation, Xbox, Coca-Cola)\n   Choose whichever is more recognizable and debate-worthy for that category\n\n4. All 4 entries MUST have:\n   - LARGE, PASSIONATE FANBASES with strong brand/product loyalty\n   - Active online communities that defend their choice\n   - History of creating \"wars\" or heated debates (think Console Wars, Phone Wars, etc.)\n   - Tribalism where fans actively argue why their choice is superior\n\n5. Selection criteria:\n   - Globally recognized and currently trending\n   - Direct competitors or alternatives to each other\n   - Popular with Gen Z and Millennials\n   - At the same level (don't mix company names with product names)\n\nThink of entries where people say things like:\n- \"Team [X] for life!\"\n- \"[X] is clearly better than [Y]\"\n- \"Only real ones use [X]\"\n- \"[X] users just don't understand quality\"\n\nExamples of good combinations:\n- \"Gaming Consoles\": PlayStation, Xbox, Nintendo Switch, Steam Deck (massive loyal fanbases)\n- \"Music Streaming\": Spotify, Apple Music, YouTube Music, Tidal (people defend their choice)\n- \"Anime Streaming\": Crunchyroll, Netflix, Hulu, Funimation (passionate communities)\n\nEXISTING CATEGORIES TO AVOID:\n{{ JSON.stringify($('Get Current Videos').all()) }}\n\nOutput ONLY the JSON object, no additional text or explanation.","hasOutputParser":true},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.6,"position":[400,140],"id":"fa13729f-b519-4929-9a16-1e88f8b9d485","name":"Generate Video Idea","executeOnce":true},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"1Xg2KNX6I7cDpjmT6TbuhGKBQO5GwInSrT728VvP6N3M","mode":"list","cachedResultName":"famous_brands_sheet","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Xg2KNX6I7cDpjmT6TbuhGKBQO5GwInSrT728VvP6N3M/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Sheet1","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Xg2KNX6I7cDpjmT6TbuhGKBQO5GwInSrT728VvP6N3M/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Category":"={{ $json.output.Category }}","Brand 1":"={{ $json.output['Brand 1'] }}","Brand 2":"={{ $json.output['Brand 2'] }}","Brand 3":"={{ $json.output['Brand 3'] }}","Brand 4":"={{ $json.output['Brand 4'] }}"},"matchingColumns":["Category"],"schema":[{"id":"Category","displayName":"Category","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Brand 1","displayName":"Brand 1","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Brand 2","displayName":"Brand 2","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Brand 3","displayName":"Brand 3","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Brand 4","displayName":"Brand 4","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Status","displayName":"Status","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"row_number","displayName":"row_number","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"readOnly":true,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[760,140],"id":"0bd24f66-2a75-425b-a731-5f0d640a3766","name":"Store Video Idea"},{"parameters":{"jsCode":"// Extract all brand values from any field that starts with \"Brand\"\nconst data = $('Generate Video Idea').first().json.output; // Get the first item from the array\nconst brands = Object.keys(data)\n    .filter(key => key.startsWith('Brand'))\n    .map(key => data[key])\n    .filter(Boolean);\n\n// Return each brand as a separate item\nreturn brands.map(brand => ({ brand: brand }));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[760,400],"id":"e679351d-a052-4648-b1d0-6afde9eadef0","name":"Split the brands"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[1040,200],"id":"279abc36-0c4b-4c22-9d76-de53e8ca9e38","name":"OpenRouter Chat Model1"},{"parameters":{"jsonSchemaExample":"{\n  \"brand\": \"[Brand Name]\",\n  \"image_prompt\": \"[Detailed visual description]\",\n  \"video_prompt\": \"[5-second cinematic loop prompt]\",\n  \"audio_prompt\": \"[Immersive, brand-aligned music description]\"\n}\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[1180,200],"id":"53484a8c-31bf-4ade-958c-474a3530e8e3","name":"Prompts Schema"},{"parameters":{"promptType":"define","text":"={{ $('Generate Video Idea').item.json.output.Category }} Brand: {{ $json.brand }}","hasOutputParser":true,"messages":{"messageValues":[{"message":"=Transform Famous Brands into Tiny, Visually Satisfying Buildings\n\n## Overview\n\nYou are a **multimodal creative AI** that transforms **famous brands into miniature architectural masterpieces**. Each creation must be **instantly recognizable, visually stunning, and emotionally satisfying**.\n\nGiven a brand name, you will generate three interconnected prompts that work together to create a cohesive miniature world.\n\n## Core Requirements\n\n### Visual Identity Rules\n- The building's **primary shape** MUST be the brand's most iconic element:\n  - Product form (Coca-Cola bottle, iPhone rectangle, McDonald's arch)\n  - Logo shape (Apple's apple, Twitter's bird, Mercedes' tri-star)\n  - Signature design element (Starbucks' mermaid, Nike's swoosh)\n- Include **exact brand colors** using proper color names\n- Display the **actual logo** prominently on the structure\n- Make it so recognizable that viewers instantly know the brand without text\n\n### Architectural Requirements\n- Transform the brand element into a **functional building** with:\n  - Clear entrance(s) and windows\n  - Visible interior spaces through glass/openings\n  - Appropriate scale shown via tiny people (5-10 visible)\n  - Architectural details that enhance realism (stairs, railings, signs)\n- Add **brand-appropriate surroundings**:\n  - Related miniature props/products\n  - Themed landscaping or environment\n  - Supporting structures that reinforce brand identity\n\n### Style Guidelines\n- **Aesthetic**: Tilt-shift photography effect, miniature diorama feel\n- **Mood**: Cozy, inviting, \"I want to visit this place\"\n- **Lighting**: Golden hour, soft shadows, warm atmosphere\n- **Detail Level**: Hyper-realistic textures, materials true to brand\n\n## Output Format\n\n**Image Prompt:** [Describe the static scene with architectural details, exact positioning of elements, materials, colors, lighting, and tiny people activities]\n\n**Video Prompt:** [5-second loop with specific camera movement, character animations, environmental motion, and timing details]\n\n**Audio Prompt:** [Musical style, instruments, tempo, mood - brand-aligned but always soothing/ambient]\n\n## Example Output (Brand: Spotify)\n\n**Image Prompt:**\nA hyperrealistic miniature building shaped like the Spotify logo - three curved sound waves forming a cylindrical structure with glowing green bars. The building is made of matte black metal with the signature Spotify green (hex #1DB954) illuminating from within each wave bar. Glass panels between the waves reveal multiple floors of a music venue. Tiny people wearing headphones walk through the main entrance at the base, while others relax on bean bags visible through the windows. The rooftop features a miniature concert stage with LED panels. Surrounding the building are oversized vinyl records used as outdoor seating areas and pathway markers. Small holographic music notes float gently around the structure.\n\n**Video Prompt:**\n- A Gently rotating camara around the building. \n- Tiny concert-goers flow in and out of the entrance in a continuous loop. On the rooftop, miniature band figures perform with looping animations. \n- Holographic music notes drift upward and fade, regenerating at the base. Interior lights flicker to suggest activity.\n- People working in the building\n\n**Audio Prompt:**\nDreamy lo-fi house beat at 120 BPM. Layers include: soft vinyl crackle, warm Rhodes piano chords, subtle 808 bass, filtered percussion, and distant reverb-soaked synth melodies. The track feels like discovering a secret underground music venue - cozy, mysterious, and endlessly listenable.\n\n## Quality Checklist\nBefore submitting, ensure:\n✓ Brand is instantly recognizable from shape alone\n✓ All three prompts create a unified experience\n✓ Scene includes dynamic elements for video\n✓ Tiny people provide scale and life\n✓ Overall feeling is cozy and satisfying\n✓ Technical details are specific and achievable\n\nRemember: The goal is to make viewers say \"I want to shrink down and visit this place!\""}]}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.6,"position":[1020,140],"id":"b27c900c-ff5f-4418-b43e-7cedcceb343a","name":"Generate Prompts"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[400,460],"id":"1cee4b02-7210-4741-8195-5465cfb5c607","name":"gpt-4o-mini"},{"parameters":{"jsonSchemaExample":"{\n  \"title\": \"Your engaging title here\",\n  \"description\": \"Your SEO-optimized description here\",\n  \"keywords\": \"keyword1, keyword2, keyword3, ... (20 total keywords)\"\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[560,460],"id":"1f9c8f24-6e3a-42a6-80a4-fb439d8bf794","name":"Structured Output Parser1"},{"parameters":{"promptType":"define","text":"={{ $('Generate Video Idea').item.json.output }}","hasOutputParser":true,"messages":{"messageValues":[{"message":"=You are an expert YouTube content strategist specializing in viral content and algorithm optimization. Your task is to create metadata that maximizes click-through rates and search visibility.\n\nWhen I provide the video concept/script, generate:\n\n1. **Title** (40-60 characters): Must include:\n   - A number or comparison (e.g., \"Top 4\", \"X vs Y\", \"Every Type of...\")\n   - Emotional trigger word (DESTROYING, INSANE, ULTIMATE, EXPOSED)\n   - Curiosity gap or unexpected twist\n   - Current year if relevant (2024/2025)\n   - Pattern: \"[Emotional Hook] + [Specific Topic] + [Curiosity Element]\"\n\n2. **Description** (150-200 characters): Structure as:\n   - First 125 characters: Complete thought visible in search (no cutoffs)\n   - Hook statement + value proposition + soft CTA\n   - Include 2-3 natural keywords\n   - Use \"you\" language for connection\n   - End with engagement prompt (question or challenge)\n\n3. **Keywords** (25 comma-separated terms):\n   - 5 broad head terms (1-2 words, high volume)\n   - 10 specific mid-tail keywords (2-3 words)\n   - 5 long-tail phrases (3-5 words, high intent)\n   - 3 trending/seasonal keywords\n   - 2 competitor/alternative brand keywords\n   - Mix of: comparison terms, question phrases, \"best/top\" modifiers\n\n**Proven Title Formulas:**\n- \"I Tested Every [Category]... Here's the TRUTH\"\n- \"[Brand] vs [Brand] vs [Brand] - The ULTIMATE Showdown\"\n- \"Why Everyone's WRONG About [Topic]\"\n- \"Ranking EVERY [Product] From WORST to BEST\"\n- \"The [Topic] Tier List Nobody Asked For\"\n\n**Output Format (JSON):**\n{\n  \"title\": \"Your 40-60 character title\",\n  \"description\": \"Your 150-200 character description with natural flow\",\n  \"keywords\": \"keyword1, keyword2, keyword3... (25 total, comma-separated)\"\n}\n\n**Example Output:**\n{\n  \"title\": \"Ranking EVERY Gaming Console - The ULTIMATE Tier List\",\n  \"description\": \"Which gaming console reigns supreme in 2024? I tested PlayStation, Xbox, Nintendo Switch & more to create the definitive tier list. Where does YOUR favorite rank?\",\n  \"keywords\": \"gaming console tier list, best gaming console 2024, playstation vs xbox, nintendo switch vs steam deck, gaming console comparison, ps5 vs xbox series x, best console for gaming, gaming tier list, console wars 2024, gaming console ranking, ultimate gaming console, which console to buy, gaming console review, console comparison 2024, gaming console debate, playstation, xbox, nintendo switch, steam deck, gaming console guide, console tier list 2024, ranking gaming consoles, every gaming console ranked, gaming console showdown, gaming console battle\"\n}\n\nFocus on what makes people stop scrolling and click. The goal is 10%+ CTR."}]}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[400,400],"id":"7fbd796f-140c-42c8-b878-10dd6a4a5f89","name":"Generate Upload Details","retryOnFail":true},{"parameters":{"method":"POST","url":"https://api.runware.ai/v1","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"specifyBody":"json","jsonBody":"=[\n  {\n    \"taskType\": \"imageInference\",\n    \"taskUUID\": \"fe3c8a29-44dc-455d-95cd-a1fea68046e1\",\n    \"width\": 1152,\n    \"height\": 2048,\n    \"numberResults\": 1,\n    \"outputFormat\": \"JPEG\",\n    \"steps\": 28,\n    \"CFGScale\": 3,\n    \"scheduler\": \"FlowMatchEulerDiscreteScheduler\",\n    \"outputType\": [\n      \"URL\"\n    ],\n    \"includeCost\": true,\n    \"positivePrompt\": \"{{ $json.output.image_prompt.replace(/[^a-zA-Z0-9\\s.,]/g, '').replace(/[\\n\\r\\t\\s]+/g, \" \").trim() }}\",\n    \"model\": \"runware:101@1\"\n  }\n]","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1380,140],"id":"35884f90-0b09-4329-a265-dd5a6006ef01","name":"Generate Image","retryOnFail":true},{"parameters":{"method":"POST","url":"https://api.aimlapi.com/v2/generate/video/kling/generation","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"contentType":"raw","rawContentType":"application/json","body":"={\n    \"prompt\": \"{{ $('Generate Prompts').item.json.output.video_prompt }}\",\n    \"duration\": \"5\",\n    \"ratio\": \"9:16\",\n    \"model\": \"kling-video/v1.6/standard/image-to-video\",\n    \"image_url\": \"{{ $json.data[0].imageURL }}\"\n  }","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1020,400],"id":"085e61dc-55a2-404b-beed-9b62b8cae9a6","name":"Image to video"},{"parameters":{"url":"https://api.aimlapi.com/v2/generate/video/kling/generation","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendQuery":true,"queryParameters":{"parameters":[{"name":"generation_id","value":"={{ $json.id }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1380,400],"id":"264608be-0cbc-476c-b571-c8a2084063b6","name":"Get Video"},{"parameters":{"amount":10,"unit":"minutes"},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1200,400],"id":"86b2b2f1-34e3-4f95-ac25-eaaa7b3014ac","name":"Wait","webhookId":"ec57ebf6-9525-4b14-96f9-423924ddc1e8"},{"parameters":{"name":"={{ $json.id.split(\":\")[0] }}.mp3","driveId":{"__rl":true,"mode":"list","value":"My Drive"},"folderId":{"__rl":true,"value":"1JA1DnD8umXuaJL-a-oLomO6PdvKkXyVC","mode":"list","cachedResultName":"famous_brands_sounds","cachedResultUrl":"https://drive.google.com/drive/folders/1JA1DnD8umXuaJL-a-oLomO6PdvKkXyVC"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1200,640],"id":"06613611-f112-405d-a164-dd2649c64dc8","name":"Upload Mp3"},{"parameters":{"operation":"share","fileId":{"__rl":true,"value":"={{ $json.id }}","mode":"id"},"permissionsUi":{"permissionsValues":{"role":"writer","type":"anyone","allowFileDiscovery":true}},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1380,640],"id":"da6c70b2-6a27-484a-9ff8-794cf011df7b","name":"Grant Access"},{"parameters":{"method":"POST","url":"https://api.elevenlabs.io/v1/sound-generation","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"contentType":"raw","rawContentType":"application/json","body":"={\n  \"text\": \"{{ $('Generate Prompts').item.json.output.audio_prompt.substring(0, 400) }}\",\n  \"duration_seconds\": 5,\n  \"prompt_influence\": 0.9\n}\n","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1020,640],"id":"bcfd6c25-6eb3-4373-913e-bf9d5fa53e6f","name":"Generate Sound","retryOnFail":true,"waitBetweenTries":5000},{"parameters":{"content":"## Generate Images","height":220,"width":500,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1000,80],"id":"7cd21cdc-69f7-492a-8522-66e031016f6e","name":"Sticky Note9"},{"parameters":{"content":"## Generate Upload Details","height":220,"width":500,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[380,340],"id":"c8ac32aa-b7ce-4b86-a440-3fb8f61184bc","name":"Sticky Note10"},{"parameters":{"content":"## Generate Video Idea","height":220,"width":500,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[380,80],"id":"82197463-cbb5-4343-a8b5-d1f03de9e718","name":"Sticky Note11"},{"parameters":{"content":"## Generate Video","height":220,"width":500,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1000,340],"id":"ab794ab0-2bc5-491b-9787-8e8d409a63c7","name":"Sticky Note12"},{"parameters":{"content":"## Generate Sounds","height":220,"width":500,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1000,580],"id":"1a363b6e-f725-4eef-9dca-bbc7b0afbe57","name":"Sticky Note13"},{"parameters":{"jsCode":"/**\n * Simplified n8n node script that:\n * 1. Downloads video and audio pairs\n * 2. Merges each video with its corresponding audio and adds fade transitions\n * 3. Concatenates all merged videos into final output\n */\n\n// Extract input data\nconst videoUrls = $('Get Video').all().map(item => item?.json?.video.url);\nconst audioUrls = $('Upload Mp3').all().map(item => item?.json?.webContentLink);\n\n// Configuration - easily adjustable\nconst config = {\n  workDir: \"/tmp/n8n/video_concat\",\n  finalOutputName: \"final_concatenated_video.mp4\",\n  video: {\n    duration: 5, // Duration of each video segment in seconds\n    frameRate: 30,\n  },\n  audio: {\n    duration: 5, // Duration of each audio segment in seconds\n  },\n  transitions: {\n    fadeIn: {\n      duration: 0.5, // Fade in duration in seconds\n    },\n    fadeOut: {\n      duration: 0.5, // Fade out duration in seconds\n    },\n  },\n  ffmpeg: {\n    videoCodec: \"libx264\",\n    audioCodec: \"aac\",\n    audioBitrate: \"192k\",\n    videoBitrate: \"4M\",\n    pixelFormat: \"yuv420p\",\n    preset: \"medium\",\n    audioChannels: 2,\n  },\n  metadata: {\n    title: \"Concatenated Video with Audio\",\n    artist: \"Generated Content\",\n    comment: \"Created with n8n workflow\",\n    copyright: \"© \" + new Date().getFullYear(),\n  },\n};\n\n// Generate metadata arguments\nfunction generateMetadataArgs(config) {\n  const metadata = [];\n  if (config.metadata.title) metadata.push(`-metadata title=\"${config.metadata.title}\"`);\n  if (config.metadata.artist) metadata.push(`-metadata artist=\"${config.metadata.artist}\"`);\n  if (config.metadata.comment) metadata.push(`-metadata comment=\"${config.metadata.comment}\"`);\n  if (config.metadata.copyright) metadata.push(`-metadata copyright=\"${config.metadata.copyright}\"`);\n  return metadata.join(\" \");\n}\n\n// Generate the shell script\nlet script = `#!/bin/bash\nset -e\n\n# Create working directory\nWORK_DIR=\"${config.workDir}\"\nmkdir -p $WORK_DIR\nchmod 777 $WORK_DIR\ncd $WORK_DIR\n\necho \"Working directory: $WORK_DIR\"\necho \"Video segments: ${videoUrls.length}\"\necho \"Audio segments: ${audioUrls.length}\"\n\n# Clean previous files\nrm -rf $WORK_DIR/video_* $WORK_DIR/audio_* $WORK_DIR/merged_* $WORK_DIR/file_list.txt $WORK_DIR/${config.finalOutputName}\n\n# Download and process each video/audio pair\necho \"Processing video and audio pairs...\"\n`;\n\n// Process each video/audio pair\nfor (let i = 0; i < Math.max(videoUrls.length, audioUrls.length); i++) {\n  const videoUrl = videoUrls[i] || videoUrls[videoUrls.length - 1]; // Use last video if we run out\n  const audioUrl = audioUrls[i] || audioUrls[audioUrls.length - 1]; // Use last audio if we run out\n  \n  // Apply fade effects to each individual video like in the working example\n  const isFirst = i === 0;\n  const isLast = i === Math.max(videoUrls.length, audioUrls.length) - 1;\n  \n  // Build fade filter for each video\n  let fadeFilter = '';\n  if (config.transitions.fadeIn.duration > 0 && config.transitions.fadeOut.duration > 0) {\n    fadeFilter = `fade=t=in:st=0:d=${config.transitions.fadeIn.duration},fade=t=out:st=${config.video.duration - config.transitions.fadeOut.duration}:d=${config.transitions.fadeOut.duration}`;\n  } else if (config.transitions.fadeIn.duration > 0) {\n    fadeFilter = `fade=t=in:st=0:d=${config.transitions.fadeIn.duration}`;\n  } else if (config.transitions.fadeOut.duration > 0) {\n    fadeFilter = `fade=t=out:st=${config.video.duration - config.transitions.fadeOut.duration}:d=${config.transitions.fadeOut.duration}`;\n  }\n\n  script += `\n# Processing pair ${i + 1}\necho \"Downloading video ${i + 1}: ${videoUrl}\"\ncurl -L \"${videoUrl}\" -o \"$WORK_DIR/video_${i}.mp4\"\n\necho \"Downloading audio ${i + 1}: ${audioUrl}\"\ncurl -L \"${audioUrl}\" -o \"$WORK_DIR/audio_${i}.mp3\"\n\n# Merge video with audio and apply fade transitions to each video\necho \"Merging video ${i + 1} with audio and applying fade transitions...\"\nffmpeg -y -i \"$WORK_DIR/video_${i}.mp4\" -i \"$WORK_DIR/audio_${i}.mp3\" \\\\\n  -map 0:v -map 1:a \\\\\n  -c:v ${config.ffmpeg.videoCodec} \\\\\n  -c:a ${config.ffmpeg.audioCodec} \\\\\n  -b:v ${config.ffmpeg.videoBitrate} \\\\\n  -b:a ${config.ffmpeg.audioBitrate} \\\\\n  -ac ${config.ffmpeg.audioChannels} \\\\\n  -r ${config.video.frameRate} \\\\\n  -pix_fmt ${config.ffmpeg.pixelFormat} \\\\\n  -preset ${config.ffmpeg.preset} \\\\\n  -t ${config.video.duration} \\\\`;\n\n  // Add fade filter if configured\n  if (fadeFilter) {\n    script += `\n  -vf \"${fadeFilter}\" \\\\`;\n  }\n\n  script += `\n  \"$WORK_DIR/merged_${i}.mp4\"\n\n# Add to file list for concatenation\necho \"file 'merged_${i}.mp4'\" >> \"$WORK_DIR/file_list.txt\"\n`;\n}\n\n// Final concatenation\nscript += `\n# Verify file list\necho \"File list contents:\"\ncat \"$WORK_DIR/file_list.txt\"\n\n# Concatenate all merged videos\necho \"Concatenating all merged videos...\"\nffmpeg -y -f concat -safe 0 -i \"$WORK_DIR/file_list.txt\" \\\\\n  -c copy \\\\\n  -movflags +faststart \\\\\n  ${generateMetadataArgs(config)} \\\\\n  \"$WORK_DIR/${config.finalOutputName}\"\n\necho \"Final video created at: $WORK_DIR/${config.finalOutputName}\"\nls -la \"$WORK_DIR/${config.finalOutputName}\"\n\n# Get file information\necho \"File size:\"\ndu -h \"$WORK_DIR/${config.finalOutputName}\"\n\necho \"Video information:\"\nffprobe -v quiet -print_format json -show_format -show_streams \"$WORK_DIR/${config.finalOutputName}\"\n\necho \"FINAL_VIDEO_PATH=$WORK_DIR/${config.finalOutputName}\"\n`;\n\n// Return the generated shell script and file path\nreturn {\n  command: script,\n  file_path: `${config.workDir}/${config.finalOutputName}`,\n  config: config // Include config for reference\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1640,140],"id":"0916e8f5-e093-416d-947d-de45ac22eb33","name":"Render Script"},{"parameters":{"fileSelector":"={{ $('Render Script').item.json.file_path }}","options":{"dataPropertyName":"data"}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[2040,140],"id":"f5f22848-7652-4a80-ae19-73c692170579","name":"Get Video from Disk"},{"parameters":{"command":"={{ $json.command }}"},"type":"n8n-nodes-base.executeCommand","typeVersion":1,"position":[1840,140],"id":"9514fd1d-5f0f-4130-b3aa-f7d019278e55","name":"Render Execution"},{"parameters":{"content":"## Render video","height":220,"width":540,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1620,80],"id":"f529ae85-e407-47f9-8553-4f02e3ef7244","name":"Sticky Note5"},{"parameters":{"resource":"video","operation":"upload","title":"={{ $('Generate Upload Details').first().json.output.title }}","regionCode":"US","categoryId":"24","options":{"description":"={{ $('Generate Upload Details').first().json.output.description }}","privacyStatus":"public","tags":"={{ $('Generate Upload Details').first().json.output.keywords }}"}},"type":"n8n-nodes-base.youTube","typeVersion":1,"position":[1640,380],"id":"eadea447-90c5-4a35-9b46-55c4692bc361","name":"YouTube"},{"parameters":{"content":"## Upload Video to Social Media","height":220,"width":540,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1620,320],"id":"b24defb8-7993-430d-a74f-f4640555f505","name":"Sticky Note6"},{"parameters":{"method":"POST","url":"https://api.upload-post.com/api/upload","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"name":"title","value":"={{ $('Generate Upload Details').first().json.output.title }}"},{"name":"platform[]","value":"tiktok"},{"parameterType":"formBinaryData","name":"video","inputDataFieldName":"data"},{"name":"user","value":"mintedwealth"}]},"options":{}},"id":"8873c0e3-6585-4719-907b-cece53b04410","name":"TikTok","type":"n8n-nodes-base.httpRequest","position":[1840,380],"notesInFlow":true,"typeVersion":4.2,"notes":"Generate in upload-post.com the token and add to the credentials in the header-> Authorization: Apikey (token here)"},{"parameters":{"method":"POST","url":"https://api.upload-post.com/api/upload","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"name":"title","value":"={{ $('Generate Upload Details').first().json.output.title }}"},{"name":"platform[]","value":"instagram"},{"parameterType":"formBinaryData","name":"video","inputDataFieldName":"data"},{"name":"user","value":"mintedwealth"}]},"options":{}},"id":"06e7069f-d005-418a-b195-91c32b312aa5","name":"Instagram","type":"n8n-nodes-base.httpRequest","position":[2040,380],"notesInFlow":true,"typeVersion":4.2,"notes":"Generate in upload-post.com the token and add to the credentials in the header-> Authorization: Apikey (token here)"}],"connections":{"Schedule Trigger1":{"main":[[{"node":"Get Current Videos","type":"main","index":0}]]},"OpenRouter Chat Model":{"ai_languageModel":[[{"node":"Generate Video Idea","type":"ai_languageModel","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"Generate Video Idea","type":"ai_outputParser","index":0}]]},"Get Current Videos":{"main":[[{"node":"Generate Video Idea","type":"main","index":0}]]},"Generate Video Idea":{"main":[[{"node":"Store Video Idea","type":"main","index":0}]]},"Store Video Idea":{"main":[[{"node":"Generate Upload Details","type":"main","index":0}]]},"Split the brands":{"main":[[{"node":"Generate Prompts","type":"main","index":0}]]},"OpenRouter Chat Model1":{"ai_languageModel":[[{"node":"Generate Prompts","type":"ai_languageModel","index":0}]]},"Prompts Schema":{"ai_outputParser":[[{"node":"Generate Prompts","type":"ai_outputParser","index":0}]]},"gpt-4o-mini":{"ai_languageModel":[[{"node":"Generate Upload Details","type":"ai_languageModel","index":0}]]},"Structured Output Parser1":{"ai_outputParser":[[{"node":"Generate Upload Details","type":"ai_outputParser","index":0}]]},"Generate Upload Details":{"main":[[{"node":"Split the brands","type":"main","index":0}]]},"Generate Prompts":{"main":[[{"node":"Generate Image","type":"main","index":0}]]},"Image to video":{"main":[[{"node":"Wait","type":"main","index":0}]]},"Wait":{"main":[[{"node":"Get Video","type":"main","index":0}]]},"Generate Image":{"main":[[{"node":"Image to video","type":"main","index":0}]]},"Get Video":{"main":[[{"node":"Generate Sound","type":"main","index":0}]]},"Upload Mp3":{"main":[[{"node":"Grant Access","type":"main","index":0}]]},"Generate Sound":{"main":[[{"node":"Upload Mp3","type":"main","index":0}]]},"Grant Access":{"main":[[{"node":"Render Script","type":"main","index":0}]]},"Render Execution":{"main":[[{"node":"Get Video from Disk","type":"main","index":0}]]},"Render Script":{"main":[[{"node":"Render Execution","type":"main","index":0}]]},"Get Video from Disk":{"main":[[{"node":"YouTube","type":"main","index":0},{"node":"TikTok","type":"main","index":0},{"node":"Instagram","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"540db1ac-4596-4698-aaa4-43b9693fd5ca","triggerCount":0,"tags":[]}